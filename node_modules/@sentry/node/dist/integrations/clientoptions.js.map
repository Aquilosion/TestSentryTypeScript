{"version":3,"file":"clientoptions.js","sourceRoot":"","sources":["../../src/integrations/clientoptions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,8BAAuC;AAEvC,8EAA8E;AAC9E;IAAA;QACE;;WAEG;QACI,SAAI,GAAW,eAAe,CAAC;IAqBxC,CAAC;IAnBC;;OAEG;IACI,+BAAO,GAAd,UAAe,OAAyB;QAAxC,iBAeC;QAfc,wBAAA,EAAA,YAAyB;QACtC,mBAAa,EAAE,CAAC,cAAc,CAAC,UAAC,KAAY;YAC1C,KAAK,CAAC,iBAAiB,CAAC,UAAO,KAAkB;;;oBACzC,aAAa,gBACd,KAAK,IACR,QAAQ,EAAE,MAAM,GACjB,CAAC;oBAEF,IAAI,OAAO,CAAC,UAAU,EAAE;wBACtB,KAAK,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;qBACxC;oBAED,sBAAO,aAAa,EAAC;;iBACtB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,sCAAa","sourcesContent":["import { Scope } from '@sentry/hub';\nimport { Integration, SentryEvent } from '@sentry/types';\nimport { NodeOptions } from '../backend';\nimport { getCurrentHub } from '../hub';\n\n/** Apply Node specific options to event. For now, it's only `server_name`. */\nexport class ClientOptions implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = 'ClientOptions';\n\n  /**\n   * @inheritDoc\n   */\n  public install(options: NodeOptions = {}): void {\n    getCurrentHub().configureScope((scope: Scope) => {\n      scope.addEventProcessor(async (event: SentryEvent) => {\n        const preparedEvent: SentryEvent = {\n          ...event,\n          platform: 'node',\n        };\n\n        if (options.serverName) {\n          event.server_name = options.serverName;\n        }\n\n        return preparedEvent;\n      });\n    });\n  }\n}\n"]}